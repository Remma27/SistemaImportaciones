@model IEnumerable<API.Models.Empresa>

@{
    ViewData["Title"] = "Empresas";
}

<div class="container-fluid">
    @Html.AntiForgeryToken()
    <div class="card shadow">
        <div class="card-header bg-primary text-white py-3">
            <div class="row align-items-center">
                <div class="col-12 col-lg-6 mb-2 mb-lg-0">
                    <h3 class="mb-0">Gestión de Empresas</h3>
                </div>
                <div class="col-12 col-lg-6">
                    <div class="d-flex flex-column flex-lg-row justify-content-lg-end gap-2">
                        <a asp-controller="Home" asp-action="Index" class="btn btn-light btn-sm py-1 px-3 w-100 w-lg-auto">
                            <i class="fas fa-arrow-left me-1"></i><span class="d-inline-block">Volver</span>
                        </a>
                        <a asp-controller="Empresa" asp-action="Create" class="btn btn-light btn-sm py-1 px-3 w-100 w-lg-auto">
                            <i class="fas fa-plus-circle me-1"></i><span class="d-inline-block">Nueva Empresa</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body">
            @if (ViewBag.Error != null)
            {
                <div class="alert alert-danger" role="alert">
                    @ViewBag.Error
                </div>
            }
            @if (ViewBag.Message != null)
            {
                <div class="alert alert-info" role="alert">
                    @ViewBag.Message
                </div>
            }
            <div class="table-responsive" style="max-height: 450px; overflow-y: auto;">
                @if (!Model.Any())
                {
                    <div class="alert alert-info">
                        No hay empresas registradas en el sistema.
                    </div>
                }
                else
                {
                    <table class="table table-striped table-hover align-middle">
                        <thead class="table-light sticky-top">
                            <tr>
                                <th>Nombre</th>
                                <th>Estado</th>
                                <th class="text-end">Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.nombreempresa)</td>
                                    <td>
                                        <div class="form-check form-switch">
                                            <input class="form-check-input status-toggle" 
                                                   type="checkbox" 
                                                   id="status-@item.id_empresa" 
                                                   data-id="@item.id_empresa"
                                                   @(item.estatus == 1 ? "checked" : "")>
                                        </div>
                                    </td>
                                    <td class="text-end">
                                        <div class="d-flex flex-wrap gap-1 justify-content-end">
                                            <a asp-controller="Empresa" asp-action="Edit" asp-route-id="@item.id_empresa"
                                               class="btn btn-sm btn-warning">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            @if (User.IsInRole("Administrador"))
                                            {
                                                <a asp-controller="Empresa" asp-action="Delete" asp-route-id="@item.id_empresa"
                                                   class="btn btn-sm btn-danger">
                                                    <i class="fas fa-trash"></i>
                                                </a>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .sticky-top {
        position: sticky;
        top: 0;
        z-index: 1;
        background-color: #f8f9fa;
    }
    
    /* Toggle switch styling */
    .form-check.form-switch .form-check-input.status-toggle {
        width: 4em !important;
        height: 1.5em;
        cursor: pointer;
    }
    
    .status-toggle:checked {
        background-color: #198754;
        border-color: #198754;
    }
    
    .status-toggle:not(:checked) {
        background-color: #dc3545;
        border-color: #dc3545;
    }
    
    .form-check.form-switch {
        display: flex;
        align-items: center;
    }
    
    .form-check-label {
        margin-left: 0.5rem;
    }

    @@media (max-width: 992px) {
    .d-flex.flex-wrap.gap-1 .btn {
        width: 100%;
        margin-bottom: 0.5rem;
    }
}
</style>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Handle status toggle clicks
            $('.status-toggle').on('change', function() {
                const checkbox = $(this);
                const id = checkbox.data('id');
                const isChecked = checkbox.prop('checked');
                
                // Disable checkbox while processing
                checkbox.prop('disabled', true);
                
                // Get CSRF token
                const token = $('input[name="__RequestVerificationToken"]').val();
                
                // Make AJAX request to update status
                $.ajax({
                    url: '@Url.Action("ToggleStatus", "Empresa")',
                    type: 'POST',
                    data: { id: id, __RequestVerificationToken: token },
                    success: function(response) {
                        if (response.success) {
                            // Show success message
                            toastService.success(response.message);
                        } else {
                            // Restore checkbox state
                            checkbox.prop('checked', !isChecked);
                            // Show error message
                            toastService.error(response.message);
                        }
                    },
                    error: function() {
                        // Restore checkbox state
                        checkbox.prop('checked', !isChecked);
                        toastService.error('Error de comunicación con el servidor');
                    },
                    complete: function() {
                        // Re-enable checkbox
                        checkbox.prop('disabled', false);
                    }
                });
            });
        });
    </script>
}

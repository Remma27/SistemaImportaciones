@model IEnumerable<Sistema_de_Gestion_de_Importaciones.Models.ViewModels.InformeGeneralViewModel>
@using Microsoft.AspNetCore.Mvc.Rendering
@using System.Linq
@using Sistema_de_Gestion_de_Importaciones.ViewModels

@section Styles {
    <link rel="stylesheet" href="~/css/informeGeneral.css" />
}

@{
    ViewData["Title"] = "Informe General";
    var modelData = Model ??
    Enumerable.Empty<Sistema_de_Gestion_de_Importaciones.Models.ViewModels.InformeGeneralViewModel>();
    var selectedBarco = Context.Request.Query["selectedBarco"].ToString();


    var totalMovimientos = ViewBag.TotalMovimientos ?? 0;

    var totales = new
    {
        TotalRegistros = ViewBag.TotalMovimientos ?? 0, 
        RequeridoKg = modelData.Sum(x => x.RequeridoKg),
        RequeridoTon = modelData.Sum(x => x.RequeridoTon),
        DescargaKg = modelData.Sum(x => x.DescargaKg),
        FaltanteKg = modelData.Sum(x => x.FaltanteKg),
        TonFaltantes = modelData.Sum(x => x.TonFaltantes),
        CamionesFaltantes = modelData.Sum(x => x.CamionesFaltantes),
        ConteoPlacas = modelData.Sum(x => x.ConteoPlacas),
        PorcentajeTotal = modelData.Any() && modelData.Sum(x => x.RequeridoKg) > 0
    ? Math.Round((decimal)(modelData.Sum(x => x.DescargaKg) / modelData.Sum(x => x.RequeridoKg)) * 100M, 2)
    : 0
    };

    var escotillasData = ViewBag.EscotillasData;
}

<div class="container-fluid py-4">
    <div class="card shadow-lg border-0">
        <div class="card-header bg-primary bg-gradient text-white py-3">
            <div class="row g-2 align-items-center">

                <div class="col-12 col-md-4 mb-2 mb-md-0 text-center text-md-start">
                    <h3 class="mb-0 fs-4 fs-md-3"><i class="fas fa-chart-bar me-2"></i>Informe General</h3>
                </div>


                <div class="col-12 col-md-4 mb-2 mb-md-0">
                    <form method="get" asp-action="Index" class="mb-0">
                        <div class="input-group">
                            <label class="input-group-text bg-primary text-white border-0">
                                <i class="fas fa-ship me-1"></i>
                            </label>
                            <select name="selectedBarco" class="form-select" asp-items="ViewBag.Barcos"
                                onchange="this.form.submit()">
                                <option value="">Seleccione una Importación</option>
                            </select>
                        </div>
                    </form>
                </div>


                <div class="col-12 col-md-4 d-flex justify-content-center justify-content-md-end">
                    <div class="action-buttons-responsive">
                        <button class="btn btn-light btn-action" id="exportToExcel" title="Exportar a Excel"
                            disabled="@(modelData?.Any() != true)">
                            <i class="fas fa-file-excel me-1"></i><span class="button-text">Excel</span>
                        </button>

                        <button class="btn btn-light btn-action" id="toggleUnits" title="Alternar unidades"
                            disabled="@(modelData?.Any() != true)">
                            <i class="fas fa-weight me-1"></i><span class="button-text"
                                id="unitsButtonText">Libras</span>
                        </button>

                        <button id="btnToggleEscotillas" class="btn btn-secondary btn-action"
                            title="Mostrar/ocultar escotillas">
                            <i class="fas fa-eye-slash"></i>
                        </button>

                        @{
                            var isBarcoSelected = !string.IsNullOrEmpty(selectedBarco);
                            var hasTableData = modelData?.Any() == true;
                            var enableDetailButton = isBarcoSelected && hasTableData;
                        }

                        <a href="@(isBarcoSelected ? Url.Action("ReporteIndividual", "RegistroPesajes", new { selectedBarco = selectedBarco, returnController = "InformeGeneral" }) : "#")"
                            id="btnTablaDetallada"
                            class="btn btn-dark btn-action @(!enableDetailButton ? "disabled" : "")"
                            title="Vista detallada">
                            <i class="fas fa-table-cells"></i>
                        </a>

                        <a href="@(isBarcoSelected ? Url.Action("ReporteGeneral", "RegistroPesajes", new { selectedBarco = selectedBarco, returnController = "InformeGeneral", returnAction = "Index" }) : "#")"
                            id="btnReporteEscotillas"
                            class="btn btn-teal btn-action @(!isBarcoSelected ? "disabled" : "")"
                            title="Reporte Escotillas por Empresa">
                            <i class="fas fa-chart-column"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            @if (string.IsNullOrEmpty(selectedBarco))
            {
                <div class="alert alert-info m-4 text-center">
                    <i class="fas fa-info-circle fa-lg me-2"></i>
                    Seleccione una importación para ver el informe
                </div>
            }
            else if (!(modelData?.Any() == true))
            {
                <div class="alert alert-warning m-4 text-center">
                    <i class="fas fa-exclamation-triangle fa-lg me-2"></i>
                    No hay datos disponibles para la importación seleccionada
                </div>
            }
            else
            {
                <div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
                    <table class="table table-hover table-striped align-middle mb-0">
                        <thead class="table-light sticky-top">
                            <tr>
                                <th class="border-bottom">Empresa</th>

                                <th class="border-bottom text-end">Req. (Kg)</th>
                                <th class="border-bottom text-end">Req. (Ton)</th>
                                <th class="border-bottom text-end">Desc. (Kg)</th>

                                <th class="border-bottom text-end unit-toggle-columns">
                                    <div>Desc.</div>
                                    <div><small>Lbs / Qq</small></div>
                                </th>

                                <th class="border-bottom text-end">Falt. (Kg)</th>
                                <th class="border-bottom text-end">Falt. (Ton)</th>

                                <th class="border-bottom text-end unit-toggle-columns">
                                    <div>Falt.</div>
                                    <div><small>Lbs / Qq</small></div>
                                </th>

                                <th class="border-bottom text-end">Cam. Falt.</th>
                                <th class="border-bottom text-end">Placas</th>
                                <th class="border-bottom text-end">% Desc.</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in modelData)
                            {
                                <tr>
                                    <td>@item.Empresa</td>

                                    <td class="text-end">@item.RequeridoKg.ToString("N0")</td>
                                    <td class="text-end">@item.RequeridoTon.ToString("N2")</td>
                                    <td class="text-end">@item.DescargaKg.ToString("N0")</td>

                                    <td class="text-end unit-toggle-columns conversion-cell dual-value-cell">
                                        <span class="top-value">@((item.DescargaKg * 2.20462).ToString("N0"))
                                            lbs</span>
                                        <span class="divider"></span>
                                        <span class="bottom-value">@((item.DescargaKg / 45.359237).ToString("N2")) qq</span>
                                    </td>

                                    <td class="text-end">@item.FaltanteKg.ToString("N0")</td>
                                    <td class="text-end">@item.TonFaltantes.ToString("N2")</td>

                                    <td class="text-end unit-toggle-columns conversion-cell dual-value-cell">
                                        <span class="top-value">@((item.FaltanteKg * 2.20462).ToString("N0")) lbs</span>
                                        <span class="divider"></span>
                                        <span class="bottom-value">@((item.FaltanteKg / 45.359237).ToString("N2")) qq</span>
                                    </td>

                                    <td class="text-end">@item.CamionesFaltantes.ToString("N2")</td>
                                    <td class="text-end">@item.ConteoPlacas</td>
                                    <td class="text-end">@item.PorcentajeDescarga.ToString("N2")%</td>
                                </tr>
                            }
                        </tbody>
                        <tfoot class="table-primary fw-bold sticky-bottom">
                            <tr>
                                <td>TOTALES (@totales.TotalRegistros registros en total)</td>

                                <td class="text-end">@totales.RequeridoKg.ToString("N0")</td>
                                <td class="text-end">@totales.RequeridoTon.ToString("N2")</td>
                                <td class="text-end">@totales.DescargaKg.ToString("N0")</td>

                                <td class="text-end unit-toggle-columns conversion-cell dual-value-cell">
                                    <span class="top-value">@((totales.DescargaKg * 2.20462).ToString("N0")) lbs</span>
                                    <span class="divider"></span>
                                    <span class="bottom-value">@((totales.DescargaKg / 45.359237).ToString("N2")) qq</span>
                                </td>

                                <td class="text-end">@totales.FaltanteKg.ToString("N0")</td>
                                <td class="text-end">@totales.TonFaltantes.ToString("N2")</td>

                                <td class="text-end unit-toggle-columns conversion-cell dual-value-cell">
                                    <span class="top-value">@((totales.FaltanteKg * 2.20462).ToString("N0")) lbs</span>
                                    <span class="divider"></span>
                                    <span class="bottom-value">@((totales.FaltanteKg / 45.359237).ToString("N2")) qq</span>
                                </td>

                                <td class="text-end">@totales.CamionesFaltantes.ToString("N2")</td>
                                <td class="text-end">@totales.ConteoPlacas</td>
                                <td class="text-end">@totales.PorcentajeTotal.ToString("N2")%</td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            }
        </div>
    </div>

    <div class="card shadow-lg border-0 mt-4" id="cardEscotillas">
        <div class="card-header bg-gradient bg-success py-3">
            <h5 class="mb-0 text-white"><i class="fas fa-calculator me-2"></i>Resumen General y Escotillas</h5>
        </div>
        <div class="card-body p-0">
            @{
                var escotillasCollection = ViewBag.EscotillasData?.Escotillas;
                var tieneEscotillas = escotillasCollection != null && escotillasCollection.Count > 0;
            }

            @if (string.IsNullOrEmpty(selectedBarco))
            {
                <div class="alert alert-info m-4 text-center">
                    <i class="fas fa-info-circle fa-lg me-2"></i>
                    Seleccione una importación para ver las escotillas
                </div>
            }
            else if (ViewBag.EscotillasData == null || !tieneEscotillas)
            {
                <div class="alert alert-warning m-4 text-center">
                    <i class="fas fa-exclamation-triangle fa-lg me-2"></i>
                    No hay registros de escotillas disponibles para esta importación
                </div>
            }
            else
            {
                var escotillasResumen = ViewBag.EscotillasData;
                <div class="table-scroll" style="max-height: 400px; overflow-y: auto;">
                    <table class="table table-hover align-middle table-fixed-header">
                        <thead class="sticky-top">
                            <tr class="table-success-dark">
                                <th>Escotilla</th>
                                <th class="text-end">Capacidad (Kg)</th>
                                <th class="text-end">Descarga (Kg)</th>
                                
                                <th class="text-end unit-toggle-columns">
                                    <div>Desc.</div>
                                    <div><small>Lbs / Qq</small></div>
                                </th>
                                
                                <th class="text-end">Diferencia (Kg)</th>
                                
                                <th class="text-end unit-toggle-columns">
                                    <div>Dif.</div>
                                    <div><small>Lbs / Qq</small></div>
                                </th>
                                
                                <th class="text-end">% Descarga</th>
                                <th>Estado</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (escotillasResumen.Escotillas != null && escotillasResumen.Escotillas.Count > 0)
                            {
                                @foreach (var escotilla in escotillasResumen.Escotillas)
                                {
                                    <tr>
                                        <td>Escotilla @escotilla.NumeroEscotilla</td>
                                        <td class="text-end">@string.Format("{0:N0}", escotilla.CapacidadKg)</td>
                                        <td class="text-end">@string.Format("{0:N0}", escotilla.DescargaRealKg)</td>
                                        
                                        <td class="text-end unit-toggle-columns conversion-cell dual-value-cell">
                                            <span class="top-value">@((escotilla.DescargaRealKg * 2.20462m).ToString("N0")) lbs</span>
                                            <span class="divider"></span>
                                            <span class="bottom-value">@((escotilla.DescargaRealKg / 45.359237m).ToString("N2")) qq</span>
                                        </td>
                                        
                                        <td class="text-end">@string.Format("{0:N0}", escotilla.DiferenciaKg)</td>
                                        
                                        <td class="text-end unit-toggle-columns conversion-cell dual-value-cell">
                                            <span class="top-value">@((escotilla.DiferenciaKg * 2.20462m).ToString("N0")) lbs</span>
                                            <span class="divider"></span>
                                            <span class="bottom-value">@((escotilla.DiferenciaKg / 45.359237m).ToString("N2")) qq</span>
                                        </td>
                                        
                                        <td class="text-end">@string.Format("{0:N2}", escotilla.Porcentaje)%</td>
                                        <td>@escotilla.Estado</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="8" class="text-center">
                                        <div class="alert alert-info mb-0">
                                            <i class="fas fa-info-circle"></i>
                                            <span>No hay escotillas registradas</span>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                        @if (escotillasResumen.Escotillas != null && escotillasResumen.Escotillas.Count > 0)
                        {
                            <tfoot class="sticky-bottom">
                                <tr class="table-success-dark">
                                    <td>Totales</td>
                                    <td class="text-end">@string.Format("{0:N0}", escotillasResumen.CapacidadTotal)</td>
                                    <td class="text-end">@string.Format("{0:N0}", escotillasResumen.DescargaTotal)</td>
                                    
                                    <td class="text-end unit-toggle-columns conversion-cell dual-value-cell">
                                        <span class="top-value">@((escotillasResumen.DescargaTotal * 2.20462m).ToString("N0")) lbs</span>
                                        <span class="divider"></span>
                                        <span class="bottom-value">@((escotillasResumen.DescargaTotal / 45.359237m).ToString("N2")) qq</span>
                                    </td>
                                    
                                    <td class="text-end">@string.Format("{0:N0}", escotillasResumen.DiferenciaTotal)</td>
                                    
                                    <td class="text-end unit-toggle-columns conversion-cell dual-value-cell">
                                        <span class="top-value">@((escotillasResumen.DiferenciaTotal * 2.20462m).ToString("N0")) lbs</span>
                                        <span class="divider"></span>
                                        <span class="bottom-value">@((escotillasResumen.DiferenciaTotal / 45.359237m).ToString("N2")) qq</span>
                                    </td>
                                    
                                    <td class="text-end">
                                        @{
                                            var diferenciaTotal = escotillasResumen.DiferenciaTotal;
                                            var porcentajeTotal = escotillasResumen.PorcentajeTotal;
                                        }
                                    @((diferenciaTotal < 0 ? "-" : "") + string.Format("{0:N2}",
                                                                    Math.Abs((decimal)porcentajeTotal)) + "%")
                                </td>
                                <td>@escotillasResumen.EstadoGeneral</td>
                            </tr>
                        </tfoot>
                                        }
                    </table>
                    <div class="p-3 bg-light border-top text-center">
                        <small class="text-muted">
                            <i class="fas fa-info-circle me-2"></i>
                            <strong>Nota:</strong> Diferencia con números positivos indica lo que falta, en negativo indica
                            sobrante
                        </small>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/gh/linways/table-to-excel@v1.0.4/dist/tableToExcel.js"></script>
    <script src="~/js/informeGeneral.js"></script>
}
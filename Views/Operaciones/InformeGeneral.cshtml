@using Sistema_de_Gestion_de_Importaciones.Models.ViewModels
@model IEnumerable<InformeGeneralViewModel>
@{
    ViewData["Title"] = "Informe General";
}

<div class="container-fluid mt-3">
    <div class="card shadow">
        <div class="card-header py-3 ">
            <div class="row align-items-center">
                <div class="col-md-4">
                    <h3 class="mb-0">
                        <i class="fas fa-chart-bar me-2"></i>
                        Informe General
                    </h3>
                </div>
                <div class="col-md-4">
                    <div class="input-group">
                        <label class="input-group-text">Importación</label>
                        <select class="form-select" id="importacionSelect">
                            @foreach (var item in (IEnumerable<SelectListItem>)ViewBag.Importaciones)
                            {
                                <option value="@item.Value" selected="@item.Selected">
                                    @item.Text
                                </option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-4 text-end">
                    <div class="btn-group" role="group">
                        <button class="btn btn-outline-primary">
                            <i class="fas fa-table me-1"></i>
                        </button>
                        <button class="btn btn-outline-primary">
                            <i class="fas fa-th me-1"></i>
                        </button>
                        <button class="btn btn-outline-primary" id="exportToExcel">
                            <i class="fas fa-download me-1"></i>
                            Exportar
                        </button>
                        <button class="btn btn-outline-primary" id="convertToLbs" type="button">
                            <i class="fas fa-weight me-1"></i>
                            Convertir a Libras
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover" id="informeTable">
                    <thead class="table-light">
                        <tr>
                            <th>Agroindustria</th>
                            <th class="text-end">Req. KG</th>
                            <th class="text-end">Req. Toneladas</th>
                            <th class="text-end">Descarga KG</th>
                            <th class="text-end">Faltante KG</th>
                            <th class="text-end">Ton. Faltantes</th>
                            <th class="text-end">Camiones Faltantes</th>
                            <th class="text-end">Conteo Placas</th>
                            <th class="text-end">% Descarga</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            foreach (var item in Model)
                            {
                                <tr>
                                    <td>@(item.Empresa ?? "Sin Empresa")</td>
                                    <td class="text-end">@item.RequeridoKg.ToString("N2")</td>
                                    <td class="text-end">@item.RequeridoTon.ToString("N2")</td>
                                    <td class="text-end">@item.DescargaKg.ToString("N2")</td>
                                    <td class="text-end">@item.FaltanteKg.ToString("N2")</td>
                                    <td class="text-end">@item.TonFaltantes.ToString("N2")</td>
                                    <td class="text-end">@item.CamionesFaltantes</td>
                                    <td class="text-end">@item.ConteoPlacas</td>
                                    <td class="text-end">@item.PorcentajeDescarga.ToString("N2")%</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="9" class="text-center">Seleccione una importación para ver los datos.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card-footer">
            <div class="row">
                <div class="col-md-6">
                    <strong>Total Importación:</strong> @ViewBag.TotalImportacion KG
                </div>
                <div class="col-md-6 text-end">
                    <strong>Conteo Entregas:</strong> @ViewBag.ConteoEntregas
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.datatables.net/buttons/2.4.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.2/js/buttons.html5.min.js"></script>
    <link href="https://cdn.datatables.net/buttons/2.4.2/css/buttons.dataTables.min.css" rel="stylesheet" />
    <script>
        $(document).ready(function() {
            try {                
                function formatNumber(number) {
                    return Number(parseFloat(number || 0).toFixed(2)).toLocaleString('es');
                }

                function updateTotals() {
                    let totalRequerido = 0;
                    let totalDescarga = 0;
                    let totalFaltante = 0;
                    let totalCamiones = 0;
                    let totalPlacas = 0;

                    // Usar la API de DataTables para obtener solo las filas visibles
                    table.rows({ search: 'applied' }).every(function() {
                        const $row = $(this.node());
                        
                        // Obtener los valores usando la API de DataTables
                        const cells = this.data();
                        
                        // Parsear los valores correctamente, removiendo las comas y manejando NaN
                        const reqKg = parseFloat((cells[1] || '0').toString().replace(/,/g, '')) || 0;
                        const descKg = parseFloat((cells[3] || '0').toString().replace(/,/g, '')) || 0;
                        const faltKg = parseFloat((cells[4] || '0').toString().replace(/,/g, '')) || 0;
                        const camiones = parseInt((cells[6] || '0').toString()) || 0;
                        const placas = parseInt((cells[7] || '0').toString()) || 0;

                        totalRequerido += reqKg;
                        totalDescarga += descKg;
                        totalFaltante += faltKg;
                        totalCamiones += camiones;
                        totalPlacas += placas;
                    });

                    // Actualizar el footer con los totales formateados
                    $('.card-footer .row').html(`
                        <div class="col-md-6">
                            <strong>Total Requerido:</strong> ${formatNumber(totalRequerido)} KG
                            <br>
                            <strong>Total Descarga:</strong> ${formatNumber(totalDescarga)} KG
                            <br>
                            <strong>Total Faltante:</strong> ${formatNumber(totalFaltante)} KG
                        </div>
                        <div class="col-md-6 text-end">
                            <strong>Total Camiones Faltantes:</strong> ${totalCamiones}
                            <br>
                            <strong>Total Placas:</strong> ${totalPlacas}
                        </div>
                    `);
                }

                const table = $('#informeTable').DataTable({
                    dom: 'Bfrt', // Removido 'p' de paginación
                    responsive: true,
                    buttons: [
                        {
                            extend: 'excel',
                            text: '<i class="fas fa-file-excel me-1"></i> Exportar a Excel',
                            className: 'btn btn-success',
                            title: 'Informe_General',
                            exportOptions: {
                                columns: ':visible'
                            }
                        }
                    ],
                    initComplete: function() {
                        $('.buttons-excel').css({
                            'margin-bottom': '10px',
                            'border-radius': '5px',
                            'font-weight': '500',
                            'padding': '8px 15px'
                        });
                    },
                    language: {
                        url: 'https://cdn.datatables.net/plug-ins/1.13.7/i18n/es-ES.json'
                    },
                    pageLength: -1, // Mostrar todos los registros
                    ordering: true,
                    searching: true,
                    processing: true,
                    order: [[0, 'asc']],
                    columnDefs: [
                        { className: "text-end", targets: [1,2,3,4,5,6,7,8] }
                    ],
                    drawCallback: function() {
                        updateTotals();
                    }
                });

                // Remove el manejador anterior de exportToExcel y oculta el botón original
                $('#exportToExcel').hide();

                $('#importacionSelect').change(function() {
                    const importacionId = $(this).val();
                    window.location.href = importacionId 
                        ? `/Operaciones/InformeGeneral?importacionId=${importacionId}`
                        : '/Operaciones/InformeGeneral';
                });

                // Asegurarse de que los totales se actualicen cuando se realice una búsqueda
                table.on('search.dt', function() {
                    updateTotals();
                });

            } catch (error) {
                console.error('Error initializing DataTable:', error);
                console.error(error.stack);
            }
        });
    </script>
}
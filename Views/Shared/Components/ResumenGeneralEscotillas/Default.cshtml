@model IEnumerable<Sistema_de_Gestion_de_Importaciones.ViewModels.EscotillaViewModel>
@{
    // Obtener los kilos requeridos del ViewData
    var totalKilosRequeridos = ViewData["KilosRequeridos"] is decimal kilosReq ? kilosReq : 0M;
    
    // Solo mantenemos el estado general
    var estadoGeneral = ViewData["EstadoGeneral"] is string value5 ? value5 : "";

    var escotillasDiccionario = Model?.ToDictionary(e => e.NumeroEscotilla, e => e) ?? new Dictionary<int,
    Sistema_de_Gestion_de_Importaciones.ViewModels.EscotillaViewModel>();
    var todasLasEscotillas = Enumerable.Range(1, 5).Reverse();
    var hayDatos = Model != null && Model.Any();
    
    // Calculamos la descarga total y diferencia
    decimal descargaTotal = 0;
    
    foreach (var numeroEscotilla in todasLasEscotillas)
    {
        var escotilla = escotillasDiccionario.GetValueOrDefault(numeroEscotilla, new EscotillaViewModel 
        { 
            CapacidadKg = 0, 
            DescargaRealKg = 0,
            DiferenciaKg = 0
        });
        
        descargaTotal += escotilla.DescargaRealKg;
    }
    
    // Calculamos la diferencia usando los kilos requeridos en lugar de capacidad
    decimal diferenciaTotal = totalKilosRequeridos - descargaTotal;
    
    // Calculamos el porcentaje total
    var porcentajeTotal = totalKilosRequeridos > 0 ? (descargaTotal / totalKilosRequeridos) * 100 : 0;
    var porcentajeFaltanteSobrante = totalKilosRequeridos > 0 ? Math.Abs(diferenciaTotal) / totalKilosRequeridos * 100 : 0;
    var esSobrante = diferenciaTotal < 0; // Si diferenciaTotal es negativa, hay sobrante
}

<div class="col-lg-12">
    <div class="card mb-4 shadow-lg rounded-3 border-0">
        <div class="card-header bg-gradient bg-primary text-white py-3">
            <h5 class="mb-0">
                <i class="fas fa-ship me-2 fa-fw"></i>
                Estado de Escotillas
            </h5>
        </div>
        <div class="card-body bg-light p-4">
            @if (!hayDatos)
            {
                <div class="alert alert-info mb-0 text-center">
                    <i class="fas fa-info-circle me-2"></i>
                    No hay datos disponibles para mostrar en este momento.
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table id="tablaEscotillas" class="table table-hover table-bordered border-secondary align-middle mb-0">
                        <thead>
                            <tr class="bg-dark text-white text-center">
                                <th class="align-middle" style="width: 20%">Métrica</th>
                                @foreach (var numeroEscotilla in todasLasEscotillas)
                                {
                                    <th class="align-middle">
                                        <i class="fas fa-door-open me-1"></i>
                                        Escotilla @numeroEscotilla
                                    </th>
                                }
                                <th class="align-middle">
                                    <i class="fas fa-calculator me-1"></i>
                                    Resumen
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="fw-bold">Capacidad (Kg)</td>
                                @foreach (var numeroEscotilla in todasLasEscotillas)
                                {
                                    var escotilla = escotillasDiccionario.GetValueOrDefault(numeroEscotilla, new
                                    EscotillaViewModel
                                    { CapacidadKg = 0 });
                                    <td class="text-end">@escotilla.CapacidadKg.ToString("N0")</td>
                                }
                                <td class="text-end fw-bold">@totalKilosRequeridos.ToString("N0")</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Descargado (Kg)</td>
                                @foreach (var numeroEscotilla in todasLasEscotillas)
                                {
                                    var escotilla = escotillasDiccionario.GetValueOrDefault(numeroEscotilla, new
                                    EscotillaViewModel
                                    { DescargaRealKg = 0 });
                                    <td class="text-end">@escotilla.DescargaRealKg.ToString("N0")</td>
                                }
                                <td class="text-end fw-bold">@descargaTotal.ToString("N0")</td>
                            </tr>
                            <tr class="bg-light">
                                <td class="fw-bold">Descargado (Lbs/Qq)</td>
                                @foreach (var numeroEscotilla in todasLasEscotillas)
                                {
                                    var escotilla = escotillasDiccionario.GetValueOrDefault(numeroEscotilla, new
                                    EscotillaViewModel
                                    { DescargaRealKg = 0 });
                                    <td class="text-end">
                                        <div>
                                            <span class="d-block">@((escotilla.DescargaRealKg * 2.20462M).ToString("N0")) lbs</span>
                                            <span class="d-block text-muted small">@((escotilla.DescargaRealKg / 45.359237M).ToString("N2")) qq</span>
                                        </div>
                                    </td>
                                }
                                <td class="text-end fw-bold">
                                    <div>
                                        <span class="d-block">@((descargaTotal * 2.20462M).ToString("N0")) lbs</span>
                                        <span class="d-block text-muted">@((descargaTotal / 45.359237M).ToString("N2")) qq</span>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Diferencia (Kg)</td>
                                @foreach (var numeroEscotilla in todasLasEscotillas)
                                {
                                    var escotilla = escotillasDiccionario.GetValueOrDefault(numeroEscotilla, new
                                    EscotillaViewModel
                                    { DiferenciaKg = 0 });
                                    <td class="text-end @(escotilla.DiferenciaKg < 0 ? "text-danger" : "text-success")">
                                        @escotilla.DiferenciaKg.ToString("N0")
                                    </td>
                                }
                                <td class="text-end fw-bold @(diferenciaTotal < 0 ? "text-success" : (diferenciaTotal > 0 ? "text-danger" : ""))">
                                    @((esSobrante ? "+" : "") + Math.Abs(diferenciaTotal).ToString("N0"))
                                </td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Estado</td>
                                @foreach (var numeroEscotilla in todasLasEscotillas)
                                {
                                    var escotilla = escotillasDiccionario.GetValueOrDefault(numeroEscotilla, new
                                    EscotillaViewModel
                                    { Estado = "-" });
                                    <td class="text-center">
                                        <span
                                            class="badge @(escotilla.Estado == "Completado" ? "bg-success" : 
                                                              escotilla.Estado == "En Proceso" ? "bg-primary" : "bg-secondary")">
                                        @escotilla.Estado
                                        </span>
                                    </td>
                                }
                                <td class="text-center">
                                    <span class="badge @(porcentajeTotal >= 100 ? "bg-success" : "bg-primary") p-2">
                                        @porcentajeTotal.ToString("N2")% @(esSobrante ? "(Sobrante)" : porcentajeTotal >= 100 ? "(Completado)" : "")
                                    </span>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                
                <!-- Información adicional en un alert -->
                @if (diferenciaTotal != 0)
                {
                    <div class="alert @(esSobrante ? "alert-success" : "alert-warning") mt-3">
                        <div class="d-flex align-items-center">
                            <div class="flex-shrink-0">
                                <i class="fas @(esSobrante ? "fa-plus-circle" : "fa-exclamation-circle") fa-2x me-3"></i>
                            </div>
                            <div class="flex-grow-1">
                                <h6 class="alert-heading mb-1">@(esSobrante ? "Sobrante detectado" : "Faltante detectado")</h6>
                                <p class="mb-0">
                                    Se ha @(esSobrante ? "excedido" : "registrado menos de") lo requerido por 
                                    <strong>@Math.Abs(diferenciaTotal).ToString("N0") Kg</strong> 
                                    (@Math.Abs(porcentajeFaltanteSobrante).ToString("N2")% del total)
                                </p>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>
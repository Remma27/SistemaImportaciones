@model IEnumerable<Sistema_de_Gestion_de_Importaciones.ViewModels.EscotillaViewModel>
@{
    // Obtener los kilos requeridos del ViewData
    var totalKilosRequeridos = ViewData["KilosRequeridos"] is decimal kilosReq ? kilosReq : 0M;
    
    // Solo mantenemos el estado general
    var estadoGeneral = ViewData["EstadoGeneral"] is string value5 ? value5 : "";

    var escotillasDiccionario = Model?.ToDictionary(e => e.NumeroEscotilla, e => e) ?? new Dictionary<int,
    Sistema_de_Gestion_de_Importaciones.ViewModels.EscotillaViewModel>();
    var todasLasEscotillas = Enumerable.Range(1, 5).Reverse();
    var hayDatos = Model != null && Model.Any();
    
    // Calculamos la descarga total y diferencia
    decimal descargaTotal = 0;
    
    foreach (var numeroEscotilla in todasLasEscotillas)
    {
        var escotilla = escotillasDiccionario.GetValueOrDefault(numeroEscotilla, new EscotillaViewModel 
        { 
            CapacidadKg = 0, 
            DescargaRealKg = 0,
            DiferenciaKg = 0
        });
        
        descargaTotal += escotilla.DescargaRealKg;
    }
    
    // Calculamos la diferencia: valor positivo = faltante, valor negativo = sobrante
    decimal diferenciaTotal = totalKilosRequeridos - descargaTotal;
    
    // Calculamos el porcentaje total
    var porcentajeTotal = totalKilosRequeridos > 0 ? (descargaTotal / totalKilosRequeridos) * 100 : 0;
    var porcentajeFaltanteSobrante = totalKilosRequeridos > 0 ? Math.Abs(diferenciaTotal) / totalKilosRequeridos * 100 : 0;
    var esSobrante = diferenciaTotal < 0; // Si diferenciaTotal es negativa, hay sobrante
    var esFaltante = diferenciaTotal > 0; // Si diferenciaTotal es positiva, hay faltante
    
    // Datos para gráficas
    var porcentajeCompletado = Math.Min(porcentajeTotal, 100);
    var colorEstado = porcentajeTotal >= 100 ? "#28a745" : porcentajeTotal >= 90 ? "#17a2b8" : porcentajeTotal >= 70 ? "#ffc107" : "#dc3545";
    
    // Calcular descarga en libras y quintales
    var descargaLibras = descargaTotal * 2.20462M;
    var descargaQuintales = descargaTotal / 45.359237M;
    
    // Calcular requerido en libras y quintales
    var requeridoLibras = totalKilosRequeridos * 2.20462M;
    var requeridoQuintales = totalKilosRequeridos / 45.359237M;
    
    // Estado del progreso para texto
    string estadoProgreso = porcentajeTotal >= 100 ? "Completado" : 
                          porcentajeTotal >= 90 ? "Casi completo" : 
                          porcentajeTotal >= 70 ? "En progreso" : "Iniciando";
    
    // Colores para las gráficas de dona
    var colores = new Dictionary<string, string> {
        {"Completado", "#28a745"},
        {"En Proceso", "#0d6efd"},
        {"Sin Iniciar", "#6c757d"}
    };
}

<div class="col-lg-12">
    <div class="card mb-4 shadow-lg rounded-3 border-0">
        <div class="card-header bg-gradient bg-primary text-white py-3">
            <h5 class="mb-0">
                <i class="fas fa-ship me-2 fa-fw"></i>
                Estado de Escotillas
            </h5>
        </div>
        <div class="card-body bg-light p-4">
            @if (!hayDatos)
            {
                <div class="alert alert-info mb-0 text-center">
                    <i class="fas fa-info-circle me-2"></i>
                    No hay datos disponibles para mostrar en este momento.
                </div>
            }
            else
            {
                <!-- Tabla de escotillas -->
                <div class="table-responsive mb-4">
                    <table id="tablaEscotillas" class="table table-striped table-hover table-bordered align-middle mb-0">
                        <thead>
                            <tr class="bg-dark text-white text-center">
                                <th class="align-middle" style="width: 22%">Métrica</th>
                                @foreach (var numeroEscotilla in todasLasEscotillas)
                                {
                                    <th class="align-middle">
                                        <i class="fas fa-door-open me-1"></i>
                                        Escotilla @numeroEscotilla
                                    </th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="fw-bold">Capacidad (Kg)</td>
                                @foreach (var numeroEscotilla in todasLasEscotillas)
                                {
                                    var escotilla = escotillasDiccionario.GetValueOrDefault(numeroEscotilla, new
                                    EscotillaViewModel
                                    { CapacidadKg = 0 });
                                    <td class="text-end">@escotilla.CapacidadKg.ToString("N0")</td>
                                }
                            </tr>
                            <tr>
                                <td class="fw-bold">Descargado (Kg)</td>
                                @foreach (var numeroEscotilla in todasLasEscotillas)
                                {
                                    var escotilla = escotillasDiccionario.GetValueOrDefault(numeroEscotilla, new
                                    EscotillaViewModel
                                    { DescargaRealKg = 0 });
                                    <td class="text-end">@escotilla.DescargaRealKg.ToString("N0")</td>
                                }
                            </tr>
                            <tr class="bg-light unit-toggle-row" style="display:none;">
                                <td class="fw-bold">Descargado (Lbs/Qq)</td>
                                @foreach (var numeroEscotilla in todasLasEscotillas)
                                {
                                    var escotilla = escotillasDiccionario.GetValueOrDefault(numeroEscotilla, new
                                    EscotillaViewModel
                                    { DescargaRealKg = 0 });
                                    <td class="text-end">
                                        <div>
                                            <span class="d-block">@((escotilla.DescargaRealKg * 2.20462M).ToString("N0")) lbs</span>
                                            <span class="d-block text-muted small">@((escotilla.DescargaRealKg / 45.359237M).ToString("N2")) qq</span>
                                        </div>
                                    </td>
                                }
                            </tr>
                            <tr>
                                <td class="fw-bold">Diferencia (Kg)</td>
                                @foreach (var numeroEscotilla in todasLasEscotillas)
                                {
                                    var escotilla = escotillasDiccionario.GetValueOrDefault(numeroEscotilla, new
                                    EscotillaViewModel
                                    { DiferenciaKg = 0 });
                                    <td class="text-end @(escotilla.DiferenciaKg < 0 ? "text-success" : (escotilla.DiferenciaKg > 0 ? "text-danger" : ""))">
                                        @(escotilla.DiferenciaKg < 0 ? "+" : "")@Math.Abs(escotilla.DiferenciaKg).ToString("N0")
                                    </td>
                                }
                            </tr>
                            <tr>
                                <td class="fw-bold">Estado</td>
                                @foreach (var numeroEscotilla in todasLasEscotillas)
                                {
                                    var escotilla = escotillasDiccionario.GetValueOrDefault(numeroEscotilla, new
                                    EscotillaViewModel
                                    { Estado = "-" });
                                    <td class="text-center">
                                        <span
                                            class="badge @(escotilla.Estado == "Completado" ? "bg-success" : 
                                                              escotilla.Estado == "En Proceso" ? "bg-primary" : "bg-secondary")">
                                        @escotilla.Estado
                                        </span>
                                    </td>
                                }
                            </tr>
                        </tbody>
                    </table>
                </div>

                <!-- Dashboard con información clave -->
                <div class="row g-3">
                    <!-- Progreso general -->
                    <div class="col-lg-5">
                        <div class="card bg-white shadow-sm h-100">
                            <div class="card-body p-4">
                                <h6 class="text-primary fw-bold mb-3">
                                    <i class="fas fa-tachometer-alt me-2"></i>Progreso General
                                </h6>
                                
                                <div class="position-relative mb-3">
                                    <div class="progress" style="height: 30px; background-color: #f0f0f0; border-radius: 8px;">
                                        <div class="progress-bar" role="progressbar" 
                                             style="width: @porcentajeCompletado.ToString("0")%; background-color: @colorEstado; border-radius: 8px;" 
                                             aria-valuenow="@porcentajeCompletado" aria-valuemin="0" aria-valuemax="100">
                                        </div>
                                    </div>
                                    <div class="position-absolute top-50 start-50 translate-middle text-center" style="width: 100%;">
                                        <span class="fw-bold" style="text-shadow: 0px 0px 3px rgba(255,255,255,0.7);">
                                            @porcentajeTotal.ToString("N2")%
                                        </span>
                                    </div>
                                </div>
                                
                                <div class="d-flex justify-content-between px-2">
                                    <span class="small text-muted">0%</span>
                                    <span class="small text-muted">50%</span>
                                    <span class="small text-muted">100%</span>
                                </div>
                                
                                <div class="text-center mt-3">
                                    <span class="badge p-2 fs-6" style="background-color: @colorEstado;">
                                        @estadoProgreso @(esSobrante ? " (Con Sobrante)" : "")
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Métricas clave -->
                    <div class="col-lg-7">
                        <div class="card bg-white shadow-sm h-100">
                            <div class="card-body p-4">
                                <h6 class="text-primary fw-bold mb-3">
                                    <i class="fas fa-chart-pie me-2"></i>Resumen de Carga
                                </h6>
                                
                                <div class="row g-3 text-center">
                                    <div class="col-md-4">
                                        <div class="metric-box p-3 border rounded bg-light h-100 shadow-sm">
                                            <div class="small text-muted mb-1">Requerido</div>
                                            <div class="fw-bold fs-4 mb-1">@totalKilosRequeridos.ToString("N0")</div>
                                            <div class="text-primary">Kg</div>
                                            <div class="unit-toggle-element" style="display:none;">
                                                <hr class="my-2">
                                                <div class="small">@requeridoLibras.ToString("N0") lbs</div>
                                                <div class="small">@requeridoQuintales.ToString("N2") qq</div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="col-md-4">
                                        <div class="metric-box p-3 border rounded bg-light h-100 shadow-sm">
                                            <div class="small text-muted mb-1">Descargado</div>
                                            <div class="fw-bold fs-4 mb-1">@descargaTotal.ToString("N0")</div>
                                            <div class="text-primary">Kg</div>
                                            <div class="unit-toggle-element" style="display:none;">
                                                <hr class="my-2">
                                                <div class="small">@descargaLibras.ToString("N0") lbs</div>
                                                <div class="small">@descargaQuintales.ToString("N2") qq</div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="col-md-4">
                                        <div class="metric-box p-3 border rounded h-100 shadow-sm @(esSobrante ? "bg-success" : esFaltante ? "bg-danger bg-opacity-10" : "bg-light")">
                                            <div class="small @(esSobrante ? "text-white" : "text-muted") mb-1">@(esSobrante ? "Sobrante" : esFaltante ? "Faltante" : "Diferencia")</div>
                                            <div class="fw-bold fs-4 mb-1 @(esSobrante ? "text-white" : esFaltante ? "text-danger" : "")">
                                                @(esSobrante ? "+" : esFaltante ? "-" : "")@Math.Abs(diferenciaTotal).ToString("N0")
                                            </div>
                                            <div class="@(esSobrante ? "text-white" : "text-primary")">Kg</div>
                                            <div class="mt-1 small @(esSobrante ? "text-white" : esFaltante ? "text-danger" : "")">
                                                (@Math.Abs(porcentajeFaltanteSobrante).ToString("N2")%)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Gráficas de escotillas tipo dona -->
                    <div class="col-12 mt-4">
                        <div class="card bg-white shadow-sm">
                            <div class="card-body p-4">
                                <h6 class="text-primary fw-bold mb-4">
                                    <i class="fas fa-chart-pie me-2"></i>Estado de Descarga por Escotilla
                                </h6>
                                <div class="row g-4 justify-content-center">
                                    @foreach (var numeroEscotilla in todasLasEscotillas)
                                    {
                                        var escotilla = escotillasDiccionario.GetValueOrDefault(numeroEscotilla, new
                                        EscotillaViewModel { CapacidadKg = 0, DescargaRealKg = 0, Estado = "Sin Iniciar" });
                                        
                                        var porcentajeEscotilla = escotilla.CapacidadKg > 0 ? 
                                                                 (escotilla.DescargaRealKg / escotilla.CapacidadKg * 100) : 0;
                                        var porcentajeMostrar = Math.Min(porcentajeEscotilla, 100);
                                        var colorEscotilla = colores.GetValueOrDefault(escotilla.Estado, "#6c757d");
                                        
                                        <div class="col-md-6 col-lg-2 text-center">
                                            <div class="donut-chart-container position-relative" style="width: 120px; height: 120px; margin: 0 auto;">
                                                <canvas id="donutChart@(numeroEscotilla)" width="120" height="120"></canvas>
                                                <div class="position-absolute top-50 start-50 translate-middle text-center">
                                                    <span class="fw-bold d-block" style="font-size: 1.5rem;">@porcentajeEscotilla.ToString("0")%</span>
                                                    <span class="text-muted" style="font-size: 0.8rem;">Escotilla @numeroEscotilla</span>
                                                </div>
                                            </div>
                                            <div class="mt-3">
                                                <span class="badge p-2" style="background-color: @colorEscotilla;">
                                                    @escotilla.Estado
                                                </span>
                                            </div>
                                            <div class="mt-2 small text-muted">
                                                <div>Capacidad: @escotilla.CapacidadKg.ToString("N0") Kg</div>
                                                <div>Descargado: @escotilla.DescargaRealKg.ToString("N0") Kg</div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Scripts para gráficos -->
                <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
                <script>
                    document.addEventListener('DOMContentLoaded', function () {
                        // Escuchar el evento del botón de cambio de unidades
                        document.getElementById('btnToggleUnidad')?.addEventListener('click', function () {
                            const unitToggleElements = document.querySelectorAll('.unit-toggle-element');
                            const unitToggleRows = document.querySelectorAll('.unit-toggle-row');
                            
                            unitToggleElements.forEach(el => {
                                el.style.display = el.style.display === 'none' ? 'block' : 'none';
                            });
                            
                            unitToggleRows.forEach(row => {
                                row.style.display = row.style.display === 'none' ? 'table-row' : 'none';
                            });
                        });
                        
                        // Crear gráficos de dona para cada escotilla
                        @foreach (var numeroEscotilla in todasLasEscotillas)
                        {
                            var escotilla = escotillasDiccionario.GetValueOrDefault(numeroEscotilla, new
                            EscotillaViewModel { CapacidadKg = 0, DescargaRealKg = 0, Estado = "Sin Iniciar" });
                            
                            var porcentajeEscotilla = escotilla.CapacidadKg > 0 ? 
                                                     (escotilla.DescargaRealKg / escotilla.CapacidadKg * 100) : 0;
                            var porcentajeMostrar = Math.Min(porcentajeEscotilla, 100);
                            var colorEscotilla = colores.GetValueOrDefault(escotilla.Estado, "#6c757d");
                            var complemento = 100 - porcentajeMostrar;
                            
                            <text>
                            createDonutChart('donutChart@(numeroEscotilla)', [@porcentajeMostrar, @complemento], ['@colorEscotilla', '#e9ecef']);
                            </text>
                        }
                        
                        // Función para crear gráficos de dona
                        function createDonutChart(elementId, data, colors) {
                            const ctx = document.getElementById(elementId).getContext('2d');
                            new Chart(ctx, {
                                type: 'doughnut',
                                data: {
                                    datasets: [{
                                        data: data,
                                        backgroundColor: colors,
                                        borderWidth: 0,
                                        cutout: '70%'
                                    }]
                                },
                                options: {
                                    responsive: true,
                                    maintainAspectRatio: false,
                                    plugins: {
                                        legend: {
                                            display: false
                                        },
                                        tooltip: {
                                            enabled: false
                                        }
                                    },
                                    animation: {
                                        animateRotate: true,
                                        animateScale: true
                                    }
                                }
                            });
                        }
                    });
                </script>
            }
        </div>
    </div>
</div>
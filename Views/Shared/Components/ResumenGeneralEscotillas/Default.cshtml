@using Sistema_de_Gestion_de_Importaciones.ViewModels
@model IEnumerable<Sistema_de_Gestion_de_Importaciones.ViewModels.EscotillaViewModel>
@{
    var totalKilosRequeridos = ViewData["KilosRequeridos"] is decimal kilosReq ? kilosReq : 0M;
    
    var estadoGeneral = ViewData["EstadoGeneral"] is string value5 ? value5 : "";

    var escotillasDiccionario = Model?.ToDictionary(e => e.NumeroEscotilla, e => e) ?? new Dictionary<int,
    Sistema_de_Gestion_de_Importaciones.ViewModels.EscotillaViewModel>();
    var todasLasEscotillas = Enumerable.Range(1, 5).OrderByDescending(x => x);
    var hayDatos = Model != null && Model.Any();
    
    decimal descargaTotal = 0;
    
    foreach (var numeroEscotilla in todasLasEscotillas)
    {
        var escotilla = escotillasDiccionario.GetValueOrDefault(numeroEscotilla, new EscotillaViewModel
        {
            CapacidadKg = 0,
            DescargaRealKg = 0,
            DiferenciaKg = 0
        });
        
        descargaTotal += escotilla.DescargaRealKg;
    }
    
    decimal diferenciaTotal = totalKilosRequeridos - descargaTotal;
    
    var porcentajeTotal = totalKilosRequeridos > 0 ? (descargaTotal / totalKilosRequeridos) * 100 : 0;
    var porcentajeFaltanteSobrante = totalKilosRequeridos > 0 ? Math.Abs(diferenciaTotal) / totalKilosRequeridos * 100 : 0;
    var esSobrante = diferenciaTotal < 0;
    var esFaltante = diferenciaTotal > 0;
    
    var ColorScheme = new
    {
        Verde = "#28a745",      
        Azul = "#0d6efd",      
        Gris = "#6c757d",       
        Rojo = "#dc3545",       
        Amarillo = "#ffc107",   
        Fondo = "#f8f9fa",     
        Blanco = "#ffffff",
        Naranja = "#0d6efd" 
    };

    Func<string, decimal, string> determinarColorUnificado = (estado, porcentaje) =>
    {
        var estadoLower = (estado ?? "").ToLower().Trim();
        
        if (estadoLower.Contains("complet")) return ColorScheme.Verde;
        if (estadoLower.Contains("proces") || estadoLower.Contains("descarg")) return porcentaje >= 90 ? ColorScheme.Azul : ColorScheme.Amarillo;
        if (estadoLower.Contains("sin") || estadoLower.Contains("inici")) return ColorScheme.Gris;
        
        if (porcentaje >= 100) return ColorScheme.Verde;
        if (porcentaje >= 90) return ColorScheme.Azul;
        
        return ColorScheme.Amarillo;  
    };
    
    Func<decimal, string> determinarColorDiferencia = (diferencia) =>
    {
        if (diferencia < 0) return ColorScheme.Azul; 
        if (diferencia > 0) return ColorScheme.Rojo;
        return "inherit";
    };

    var porcentajeCompletado = Math.Min(porcentajeTotal, 100);
    var colorEstado = determinarColorUnificado(estadoGeneral, porcentajeTotal);
    
    string estadoProgreso = porcentajeTotal >= 100 ? "Completado" :
                          porcentajeTotal >= 90 ? "Casi completo" :
                          porcentajeTotal >= 70 ? "En progreso" : "Iniciando";
}

<!-- Agregar referencia a los archivos CSS y JS -->
<link rel="stylesheet" href="~/css/escotillas.css" />

<div class="col-lg-12">
    <div class="card mb-4 shadow-lg rounded-3 border-0 overflow-hidden">
        <div class="card-header bg-gradient bg-primary text-white py-3">
            <div class="d-flex align-items-center">
                <i class="fas fa-ship me-3 fa-fw fa-lg"></i>
                <h5 class="mb-0">Estado de Escotillas</h5>
            </div>
        </div>
        <div class="card-body bg-light p-4">
            @if (!hayDatos)
            {
                    <div class="alert alert-info mb-0 text-center py-4">
                        <i class="fas fa-info-circle me-2 fa-2x mb-3 d-block mx-auto"></i>
                        <h6>No hay datos disponibles para mostrar en este momento.</h6>
                    </div>
            }
            else
            {

            <div class="barco-visualizacion mb-4 shadow-sm rounded">
                        <!-- Contenedor del barco con posicionamiento relativo -->
                        <div class="barco-container position-relative overflow-auto">
                            <!-- Imagen del barco (fondo) -->
                            <img src="~/images/Barco.png" alt="Esquema de barco" class="barco-imagen w-100">
                            
                            <!-- Overlay para posicionar los indicadores de escotillas -->
                            <div class="escotillas-overlay">

                            <!-- Conversiones solo para el resumen -->
                            <div class="conversiones">
                                        <div class="unit-toggle-element" style="display: none; margin-top: 8px; font-size: 0.8rem; padding-top: 8px;">
                                            <div class="text-center mb-2 fw-bold">Conversiones</div>
                                            <!-- Modificar las lÃ­neas que muestran las conversiones -->
                                            <div class="d-flex justify-content-between">
                                                <span class="text-muted">Total:</span>
                                                <span>@((totalKilosRequeridos * 2.20462M).ToString("N2")) lbs / @((totalKilosRequeridos / 45.359237M).ToString("N2")) qq</span>
                                            </div>
                                            <div class="d-flex justify-content-between">
                                                <span class="text-muted">Descarga:</span>
                                                <span>@((descargaTotal * 2.20462M).ToString("N2")) lbs / @((descargaTotal / 45.359237M).ToString("N2")) qq</span>
                                            </div>
                                            <div class="d-flex justify-content-between">
                                                <span class="text-muted">Faltante:</span>
                                                <span style="color: @determinarColorDiferencia(diferenciaTotal)">
                                                    @(diferenciaTotal < 0 ? "+" : "")@Math.Abs(diferenciaTotal * 2.20462M).ToString("N2") lbs / 
                                                    @(diferenciaTotal < 0 ? "+" : "")@Math.Abs(diferenciaTotal / 45.359237M).ToString("N2") qq
                                                </span>
                                            </div>
                                        </div>
                            </div>

                            <button id="downloadBtn" class="btn btn-light btn-sm" title="Descargar imagen">
                                <i class="fas fa-download me-2"></i>Descargar
                            </button>

                            <div class="text-center mb-3">
                                <span class="badge bg-primary px-3 py-2">
                                    <i class="fas fa-ship me-2"></i>@ViewData["NombreBarco"]
                                </span>
                            </div>                            
                            <!-- Etiquetas para las escotillas -->
                            <div class="escotilla-labels">
                                <div class="escotilla-label-item mb-1">
                                    <div class="escotilla-label-text fw-bold">Total</div>
                                    <span class="fw-bold">@totalKilosRequeridos.ToString("N0")</span>
                                </div>
                                <div class="escotilla-label-item mb-1" style="margin-top: 22px;">
                                    <div class="escotilla-label-text fw-bold">Descarga</div>
                                    <span class="fw-bold">@descargaTotal.ToString("N0")</span>
                                </div>

                                <div class="escotilla-label-item mb-1" style="margin-top: 22px;">
                                <span class="fw-bold">@porcentajeTotal.ToString("N2")%</span>
                                </div>
                            </div>
                                @foreach (var numeroEscotilla in todasLasEscotillas)
                                {
                                    var escotilla = escotillasDiccionario.GetValueOrDefault(numeroEscotilla, new EscotillaViewModel
                                    { 
                                        CapacidadKg = 0, 
                                        DescargaRealKg = 0, 
                                        DiferenciaKg = 0,
                                        Estado = "Sin Iniciar" 
                                    });
                                    
                                    var porcentajeEscotilla = escotilla.CapacidadKg > 0 ? 
                                        (escotilla.DescargaRealKg / escotilla.CapacidadKg * 100) : 0;
                                    
                                    string badgeColor = determinarColorUnificado(escotilla.Estado, porcentajeEscotilla);
                                    
                                


                                    <!-- Posicionamiento de cada escotilla -->
                                    <div id="escotilla@(numeroEscotilla)" class="escotilla-indicador">
                                        
                                        <!-- Datos en formato vertical -->


                                        <div class="escotilla-datos">
                                            <div class="escotilla-dato mb-1">
                                                <div class="escotilla-valor fw-bold">@escotilla.CapacidadKg.ToString("N0")</div>
                                            </div>

                                            <br>
                                            
                                            
                                            <div class="escotilla-dato mb-1">
                                                <div class="escotilla-valor fw-bold" style="color: @badgeColor">@escotilla.DescargaRealKg.ToString("N0")</div>
                                            </div>

                                            <br>
                                            <div class="escotilla-dato">
                                                <div class="escotilla-valor fw-bold" style="color: @(escotilla.DiferenciaKg < 0 ? ColorScheme.Azul : (escotilla.DiferenciaKg > 0 ? ColorScheme.Rojo : "inherit"))">
                                                    Dif: @(escotilla.DiferenciaKg < 0 ? "+" : "")@Math.Abs(escotilla.DiferenciaKg).ToString("N0")
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                
                                <!-- Indicador de resumen del barco con conversiones -->
                                <div class="barco-resumen">
                                    <div class="barco-resumen-datos">
                                        <div class="d-flex flex-column align-items-start">
                                            <span class="text-white mb-1">Falta</span>
                                            <span class="fw-bold" style="color: @determinarColorDiferencia(diferenciaTotal); font-family: Consolas, monospace;">
                                                @(diferenciaTotal < 0 ? "+" : "")@Math.Abs(diferenciaTotal).ToString("N0")
                                            </span>
                                            <br>
                                            <span class="fw-bold">@((100M - porcentajeTotal).ToString("N2"))%</span>                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                 <div class="row g-4">
                        <div class="col-lg-5">
                            <div class="card bg-white shadow-sm h-100 border-0 rounded-4 overflow-hidden">
                                <div class="card-header bg-white border-0 pt-4 pb-0">
                                    <h6 class="text-success fw-bold mb-0">
                                        <i class="fas fa-tachometer-alt me-2"></i>Progreso General
                                    </h6>
                                </div>
                                <div class="card-body p-4">
                                    <div class="position-relative mb-4">
                                        <div class="custom-progress-container">
                                            <div id="progressBarMain" 
                                                 class="custom-progress-bar" 
                                                 data-porcentaje="@porcentajeCompletado.ToString("0.##", System.Globalization.CultureInfo.InvariantCulture)" 
                                                 style="width: 0%; background-color: @colorEstado;">
                                            </div>
                                            <div class="progress-text">
                                                <span class="fw-bold fs-5">@porcentajeTotal.ToString("N2")%</span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="d-flex justify-content-between px-2 mb-3">
                                        <span class="small text-muted">0%</span>
                                        <span class="small text-muted">50%</span>
                                        <span class="small text-muted">100%</span>
                                    </div>

                                    <div class="text-center mt-3">
                                        <span class="badge p-2 px-4 fs-6" style="background-color: @colorEstado; box-shadow: 0 2px 6px rgba(0,0,0,0.15);">
                                            <i class="fas fa-chart-line me-2"></i>
                                            @estadoProgreso @(esSobrante ? " (Con Sobrante)" : "")
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    
                        <div class="col-lg-7">
                            <div class="card bg-white shadow-sm h-100 border-0 rounded-4 overflow-hidden">
                                <div class="card-header bg-white border-0 pt-4 pb-0">
                                    <h6 class="text-success fw-bold mb-0">
                                        <i class="fas fa-chart-pie me-2"></i>Resumen de Carga
                                    </h6>
                                </div>
                                <div class="card-body p-4">
                                    <div class="row g-3 text-center">
                                        <div class="col-md-4">
                                            <div class="metric-box p-3 border rounded-4 bg-light h-100 shadow-sm d-flex flex-column justify-content-center position-relative overflow-hidden">
                                                <div class="metric-icon position-absolute opacity-10" style="top: -15px; right: -15px; font-size: 4rem; color: #e0e0e0;">
                                                    <i class="fas fa-weight"></i>
                                                </div>
                                                <div class="position-relative">
                                                    <div class="small text-muted mb-1">Requerido</div>
                                                    <div class="fw-bold fs-4 mb-1">@totalKilosRequeridos.ToString("N0") Kg</div>
                                                    <div class="small text-primary unit-toggle-element" style="display: none;">
                                                        @((totalKilosRequeridos * 2.20462M).ToString("N0")) lbs | 
                                                        @((totalKilosRequeridos / 45.359237M).ToString("N2")) qq
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    
                                        <div class="col-md-4">
                                            <div class="metric-box p-3 border rounded-4 bg-light h-100 shadow-sm d-flex flex-column justify-content-center position-relative overflow-hidden">
                                                <div class="metric-icon position-absolute opacity-10" style="top: -15px; right: -15px; font-size: 4rem; color: #e0e0e0;">
                                                    <i class="fas fa-dolly"></i>
                                                </div>
                                                <div class="position-relative">
                                                    <div class="small text-muted mb-1">Descargado</div>
                                                    <div class="fw-bold fs-4 mb-1">@descargaTotal.ToString("N0") Kg</div>
                                                    <div class="small text-primary unit-toggle-element" style="display: none;">
                                                        @((descargaTotal * 2.20462M).ToString("N0")) lbs | 
                                                        @((descargaTotal / 45.359237M).ToString("N2")) qq
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    
                                        <div class="col-md-4">
                                            <div class="metric-box p-3 border rounded-4 h-100 shadow-sm d-flex flex-column justify-content-center position-relative overflow-hidden" 
                                                 style="background-color: @(esSobrante ? ColorScheme.Azul : esFaltante ? ColorScheme.Rojo : "#f8f9fa"); 
                                                        opacity: @(esSobrante || esFaltante ? "0.85" : "1")">
                                                
                                                <div class="metric-icon position-absolute opacity-10" style="top: -15px; right: -15px; font-size: 4rem; color: @(esSobrante || esFaltante ? "rgba(255,255,255,0.2)" : "#e0e0e0");">
                                                    <i class="fas @(esSobrante ? "fa-plus-circle" : esFaltante ? "fa-minus-circle" : "fa-equals")"></i>
                                                </div>
                                                <div class="position-relative">
                                                    <div class="small @(esSobrante || esFaltante ? "text-white" : "text-muted") mb-1">
                                                        @(esSobrante ? "Sobrante" : esFaltante ? "Faltante" : "Diferencia")
                                                    </div>
                                                    <div class="fw-bold fs-4 mb-1 @(esSobrante || esFaltante ? "text-white" : "")">
                                                        @(esSobrante ? "+" : esFaltante ? "-" : "")@Math.Abs(diferenciaTotal).ToString("N0") Kg
                                                        <div class="mt-1 small @(esSobrante || esFaltante ? "text-white" : "") unit-toggle-element" style="display: none;">
                                                            @(esSobrante ? "+" : esFaltante ? "-" : "")@Math.Abs(diferenciaTotal * 2.20462M).ToString("N0") lbs | 
                                                            @(esSobrante ? "+" : esFaltante ? "-" : "")@Math.Abs(diferenciaTotal / 45.359237M).ToString("N2") qq
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    
                        <div class="col-12">
                            <div class="card bg-white shadow-sm border-0 rounded-4 overflow-hidden">
                                <div class="card-header bg-white border-0 pt-4 pb-0">
                                    <h6 class="text-success fw-bold mb-0">
                                        <i class="fas fa-chart-pie me-2"></i>Estado de Descarga por Escotilla
                                    </h6>
                                </div>
                                <div class="card-body p-4">
                                    <div class="row g-4 justify-content-center">
                                        @foreach (var numeroEscotilla in todasLasEscotillas)
                                        {
                                                var escotilla = escotillasDiccionario.GetValueOrDefault(numeroEscotilla, new
                                                EscotillaViewModel
                                                { CapacidadKg = 0, DescargaRealKg = 0, Estado = "Sin Iniciar" });
                                        
                                                var porcentajeEscotilla = escotilla.CapacidadKg > 0 ?
                                                                                                  (escotilla.DescargaRealKg / escotilla.CapacidadKg * 100) : 0;
                                                var porcentajeMostrar = Math.Min(porcentajeEscotilla, 100);
                                        
                                                string estadoBajo = escotilla.Estado.ToLower();
                                                string donutColor = determinarColorUnificado(escotilla.Estado, porcentajeEscotilla);

                                                <div class="col-md-6 col-lg-2 text-center">
                                                    <div class="escotilla-card p-3 border rounded-4 shadow-sm hover-lift">
                                                        <div class="escotilla-number fw-bold text-success mb-2">Escotilla @numeroEscotilla</div>
                                                        <div class="donut-chart-container position-relative mx-auto" style="width: 160px; height: 160px;">
                                                            <canvas id="donutChart@(numeroEscotilla)" width="160" height="160" 
                                                                  data-porcentaje="@porcentajeMostrar" 
                                                                  data-color="@donutColor"
                                                                  data-estado="@escotilla.Estado"></canvas>
                                                            <div class="position-absolute top-50 start-50 translate-middle text-center" style="width: 100%;">
                                                                <span class="fw-bold d-block" style="font-size: 2rem; color: @donutColor;">@porcentajeEscotilla.ToString("0")%</span>
                                                                <span class="badge rounded-pill px-2" style="background-color: @donutColor !important; font-size: 0.7rem;">
                                                                    <i class="fas @(estadoBajo.Contains("complet") ? "fa-check-circle" : 
                                                                                  estadoBajo.Contains("proces") ? "fa-sync-alt" : "fa-clock") me-1"></i>
                                                                @escotilla.Estado
                                                            </span>
                                                        </div>
                                                    </div>
                                                    <div class="mt-3 small text-muted">
                                                        <div class="d-flex justify-content-between border-bottom pb-2 mb-2">
                                                            <span>Capacidad:</span>
                                                            <span class="fw-bold">@escotilla.CapacidadKg.ToString("N0") Kg
                                                                <span class="unit-toggle-element d-block small text-muted" style="display: none;">
                                                                    @((escotilla.CapacidadKg * 2.20462M).ToString("N0")) lbs | 
                                                                    @((escotilla.CapacidadKg / 45.359237M).ToString("N2")) qq
                                                                </span>
                                                            </span>
                                                        </div>
                                                        <div class="d-flex justify-content-between border-bottom pb-2 mb-2">
                                                            <span>Descargado:</span>
                                                            <span class="fw-bold" style="color: @donutColor">
                                                                @escotilla.DescargaRealKg.ToString("N0") Kg
                                                                <span class="unit-toggle-element d-block small" style="display: none;">
                                                                    @((escotilla.DescargaRealKg * 2.20462M).ToString("N0")) lbs | 
                                                                    @((escotilla.DescargaRealKg / 45.359237M).ToString("N2")) qq
                                                                </span>
                                                            </span>
                                                        </div>
                                                        <div class="d-flex justify-content-between">
                                                            <span>Diferencia:</span>
                                                            <span class="fw-bold" style="color: @(escotilla.DiferenciaKg < 0 ? ColorScheme.Azul : (escotilla.DiferenciaKg > 0 ? ColorScheme.Rojo : "inherit"))">
                                                                @(escotilla.DiferenciaKg < 0 ? "+" : "")@Math.Abs(escotilla.DiferenciaKg).ToString("N0") Kg
                                                                <span class="unit-toggle-element d-block small" style="display: none;">
                                                                    @(escotilla.DiferenciaKg < 0 ? "+" : "")@Math.Abs(escotilla.DiferenciaKg * 2.20462M).ToString("N2")) lbs | 
                                                                    @(escotilla.DiferenciaKg < 0 ? "+" : "")@Math.Abs(escotilla.DiferenciaKg / 45.359237M).ToString("N2")) qq
                                                                </span>
                                                            </span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>                

                    <!-- Scripts para grÃ¡ficos -->
                    <script src="~/lib/chart/chart.min.js"></script>
                    <script src="~/lib/html2canvas/html2canvas.min.js"></script>
                    <script src="~/js/escotillas.js"></script>
            }
        </div>
    </div>
</div>